{% extends '::base.html.twig' %}
{% block page_title %} - {% trans %}User edit{% endtrans %}{% endblock %}

{% block breadcumb  %}
    {{ parent() }}
    <li>{% trans %}breadcumb.sep{% endtrans %} <a href="{{ path('users') }}"> {% trans %}users{% endtrans %}</a></li>
    <li>{% trans %}breadcumb.sep{% endtrans %} {% trans %}users.title.edit{% endtrans %}</li>
{% endblock %}

{% block body %}

<div class="form_box">
    <form action="{{ path('users_update', { 'id': entity.id }) }}" method="post" {{ form_enctype(edit_form) }}>

        <span class="label label-important">{{ form_errors(edit_form) }}</span>
        {% macro prototype(plan) %}
            {{form_widget(plan.puser)}}
            {{form_widget(plan.uplans, { 'label': 'Select a plan:' })}}
        {% endmacro %}

        {{ form_row(edit_form.username) }}
        {{ form_row(edit_form.email) }}
        {{ form_row(edit_form.enabled) }}
        {{ form_row(edit_form.first_name ) }}
        {{ form_row(edit_form.last_name ) }}
        {{ form_row(edit_form.groups ) }}

        <ul class="dinamic-adder" data-prototype="{{ form_widget(edit_form.puser.vars.prototype) | e }}">
                {% for plan in edit_form.puser %}
                    <li>{{_self.prototype(plan)}}</li>
                {% endfor %}
        </ul>

        {{ form_rest(edit_form) }}


        <p class="clear">
            <button class="btn" type="submit">{% trans %}Edit{% endtrans %}</button>
        </p>
    </form>
</div>

<ul class="record_actions">
    <li>
        <a href="{{ path('users') }}">
            {% trans %}Back to the list{% endtrans %}
        </a>
    </li>
    <li>
        <form action="{{ path('users_delete', { 'id': entity.id }) }}" method="post">

            {{ form_widget(delete_form) }}
            <button class="btn btn-danger" type="submit" onclick="if(!confirm('{% trans %}Are you sure?{% endtrans %}')) { return false; }">{% trans %}Delete{% endtrans %}</button>
        </form>
    </li>
</ul>

<script type="text/javascript">
    // Get the div that holds the collection of tags
    var collectionHolder = $('ul.dinamic-adder');

    // setup an "add a tag" link
    var $addTagLink = $('<a href="#" class="add_tag_link">Add plan</a>');
    var $newLinkLi = $('<li></li>').append($addTagLink);

    jQuery(document).ready(function() {

        // add a delete link to all of the existing tag form li elements
        collectionHolder.find('li').each(function() {
            addTagFormDeleteLink($(this));
        });

        // add the "add a tag" anchor and li to the tags ul
        collectionHolder.append($newLinkLi);

        $addTagLink.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // add a new tag form (see next code block)
            addTagForm(collectionHolder, $newLinkLi);
        });
    });

    function addTagFormDeleteLink($tagFormLi) {
        var $removeFormA = $('<a href="#">Remove</a>');
        $tagFormLi.append($removeFormA);

        $removeFormA.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // remove the li for the tag form
            $tagFormLi.remove();
        });
    }


    function addTagForm(collectionHolder, $newLinkLi) {
        // Get the data-prototype explained earlier
        var prototype = collectionHolder.attr('data-prototype');

        // count the current form inputs we have (e.g. 2), use that as the new index (e.g. 2)
        var newIndex = collectionHolder.find(':input').length;

        // Replace '__name__' in the prototype's HTML to
        // instead be a number based on how many items we have
        var newForm = prototype.replace(/__name__/g, newIndex);

        // Display the form in the page in an li, before the "Add a tag" link li
        var $newFormLi = $('<li></li>').append(newForm);
        $newLinkLi.before($newFormLi);
        addTagFormDeleteLink($newFormLi);
    }
</script>


{% endblock %}
