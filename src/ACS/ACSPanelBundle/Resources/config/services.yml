parameters:
    duplicate.host.class: ACS\ACSPanelBundle\Validator\Constraints\DuplicateHostValidator
    db.username.validator.class: ACS\ACSPanelBundle\Validator\Constraints\VariableLimitedLengthValidator
    domain.tools.class: ACS\ACSPanelBundle\Modules\Domain
    user.tools.class: ACS\ACSPanelBundle\Modules\UserTools
    entity_subscriber.class: ACS\ACSPanelBundle\Event\Subscribers\EntitySubscriber

services:
    # Duplicate host validator
    duplicate.host:
        class: %duplicate.host.class%
        arguments: ['@doctrine.orm.entity_manager']
        tags:
            - {name: validator.constraint_validator, alias: duplicate.host}

    # Database username length validator
    db.username.validator:
        class: %db.username.validator.class%
        arguments: ['@service_container']
        tags:
            - {name: validator.constraint_validator, alias: db.username.validator}

    # Domain checking tools
    domain.tools:
        class: %domain.tools.class%
        tags:
            - {name: domain.tools, alias: domain.tools}

    # User checking tools
    acs.user.tools:
        class: %user.tools.class%
        arguments: ['@doctrine.orm.entity_manager', '@service_container']
        tags:
            - {name: acs.user.tools, alias: acs.user.tools}

    # Server actions
    server.actions:
        class: ACS\ACSPanelBundle\Modules\ServerActions
        arguments: ['@doctrine.orm.entity_manager', '@service_container']

    # Registration class for the form
    # Overriding FosUser forms
    acs_user.registration.form.type:
        class: ACS\ACSPanelBundle\Form\RegistrationFormType
        arguments: [%fos_user.model.user.class%]
        tags:
        - { name: form.type, alias: acs_user_registration }

    acs_user.profile.form.type:
        class: ACS\ACSPanelBundle\Form\UserProfileType
        arguments: [%fos_user.model.user.class%]
        tags:
        - { name: form.type, alias: acs_acspanelbundle_userprofiletype }

    # end of FosUser forms override

    # Forms flows
    acs.form.register_hosting:
        class: ACS\ACSPanelBundle\Form\HostingFlow\RegisterHostingType
        tags:
            - { name: form.type, alias: registerHosting }

    acs.form.flow.register_hosting:
        class: ACS\ACSPanelBundle\Form\HostingFlow\RegisterHostingFlow
        parent: craue.form.flow
        scope: request
        calls:
            - [ setFormType, ['@acs.form.register_hosting'] ]
            - [ setContainer, ['@service_container'] ]
            - [ setEm, ['@doctrine.orm.entity_manager'] ]
    # END Forms flows

    # Kernel response events
    kernel_subscriber:
        class: ACS\ACSPanelBundle\Event\Subscribers\KernelSubscriber
        arguments: ['@event_dispatcher', '@router', '@session']
        tags:
            - {name: kernel.event_subscriber}

    # Entity subscribers
    entity_subscriber:
        class: %entity_subscriber.class%
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: preRemove }

    # Menu items added with event listener
    base_menu_subscriber:
        class: ACS\ACSPanelBundle\Event\Subscribers\MenuSubscriber
        arguments: ['@event_dispatcher']
        tags:
            - {name: kernel.event_subscriber}

    # DNSDomain events
    dns_subscriber:
        class: ACS\ACSPanelBundle\Event\Subscribers\DnsSubscriber
        arguments: ['@event_dispatcher']
        tags:
            - {name: kernel.event_subscriber}
